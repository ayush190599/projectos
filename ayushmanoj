#include<stdio.h>
#include<stdlib.h>
#include<pthread.h>
#include<semaphore.h>
void fb(void *ptr);
void fa(void *ptr);
void fc(void *ptr);

char buf[24];
sem_t mutex;

int main(int argc,char *argv[])
{
pthread_t thread1;
pthread_t thread2;

char *msg1="Thread1";
char *msg2="Thread2";

sem_init(&mutex,0,1);
pthread_create(&thread1,NULL,(void *) &fb,(void *) msg1);
pthread_create(&thread2,NULL,(void *) &fa,(void *) msg2);
pthread_create(&thread2,NULL,(void *) &fc,(void *) msg2);

pthread_join(thread1,NULL);
pthread_join(thread2,NULL);

sem_destroy(&mutex);

return 0;
}

void fb(void *ptr)
{
sleep(1);
char *msg=(char *)ptr;
printf("%s\n",msg);

sem_wait(&mutex);
sprintf(buf,"%s","Ayush");
printf("%s\n",buf);
sem_post(&mutex);

pthread_exit(0);
}


void fa(void *ptr)
{
char *msg=(char *)ptr;
printf("%s\n",msg);

sem_wait(&mutex);
sprintf(buf,"%s","Hello!");
printf("%s\n",buf);
sem_post(&mutex);

pthread_exit(0);
}


void fc(void *ptr)
{
sleep(2);
char *msg=(char *)ptr;
printf("%s\n",msg);

sem_wait(&mutex);
sprintf(buf,"%s","Sharma");
printf("%s\n",buf);
sem_post(&mutex);

pthread_exit(0);
}
